# This is a basic workflow to help you get started with Actions

name: Git Actions Build Deploy and Test pipeline

# Controls when the workflow will run
on:
  pull_request:
    types: [ closed ]
    branches: [ develop ]
    
env:
  needRegression: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a multiple job called "build", "deploy" and "test"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
          
      - name: Print effective-settings
        run: mvn help:effective-settings
        
      - name: Build with Maven
        run: mvn -B package --file pom.xml
        
      - name: Upload artifact
        uses: actions/upload-artifact@master
        with:
          name: artifacts
          path: target/*.jar
  
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:    
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@master
      with:
        name: artifacts
    - name: Deploy to CloudHub
      env:
        USERNAME: ${{ secrets.ANYPOINT_USERNAME }}
        PASSWORD: ${{ secrets.ANYPOINT_PASSWORD }}
      run: |
        artifactName=$(ls *.jar | head -1)
        mvn deploy -DmuleDeploy \
        -Dmule.artifact=$artifactName \
        -Denv=Sandbox \
        -Dappname=testdemooo-acc1 \
        -Danypoint.username=$USERNAME \
        -Danypoint.password=$PASSWORD \
        -Dapp.runtime=4.4.0 \
        -Dregion=us-east-2 \
        -Dworkers=1 \
        -DworkerType=Micro \
        -DdeploymentTimeout=1000000 \
        -DskipTests

  test:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
        
        - name: setup python
          uses: actions/setup-python@v4
          with: 
            python-version: '3.9'
        
        - name: Install required libs
          if: env.needRegression == 'true'
          run: |
                pip3 install datetime
                pip3 install openpyxl
                pip3 install ujson
                pip3 install pathlib
        
        - name: Setup Maven 
          uses: s4u/setup-maven-action@v1.2.1
          with:
                java-version: 8             
          
        - name: checkout Mule code
          uses: actions/checkout@v3
          with:
            repository: king-raj7/testcicddemo
            token: ${{ secrets.GITHUBTOKEN }} 
            path: main
          
        - name: checkout Regression Test Suit
          uses: actions/checkout@v3
          with:
            repository: tushar-lakhe/Smart-API-Automation
            token: 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 
            path: IdeaProjects
            
        
                 
        - name: Smart Api Automation execution for Api Test/Regression
          if: env.needRegression == 'true'
          run: |
                echo "####################################################################################################"
                echo "######################################  Initialising Test ##########################################"
                echo "####################################################################################################"

                echo "####################################################################################################"
                echo "####################################  Validating user inputs #######################################"
                echo "####################################################################################################"
                cd IdeaProjects/IdeaProjects/SmartAPIautomationframework//src//test//java//examples//users//pythonController//
                python DataValidator.py
                echo "####################################################################################################"
                echo "############################### User inputs validation Completed ###################################"
                echo "####################################################################################################"

                echo "####################################################################################################"
                echo "################################## Generating Feature Files... #####################################"
                echo "####################################################################################################"
                python3 FeatureGenerator.py
                
                echo "####################################################################################################"
                echo "################################## Feature Files Generated Successfully ##################################"
                echo "##############################################################"

                echo "####################################################################################################"
                echo "#################################### Test Execution Begins... ##############################################"
                echo "############################################################################################################"

                python3 ReportGeneratorAPI.py
                
        - name: Generate and Upload Karate Report 
          uses: actions/upload-artifact@v3
          with:
            name: Karate Report
            path: |
                   IdeaProjects/IdeaProjects/SmartAPIautomationframework/target/cucumber-html-reports/*
                
        - name: Smart Api Automation execution for Perf Test
          if: env.needRegression == 'true'
          run: | 
               cd IdeaProjects/IdeaProjects/SmartAPIautomationframework//src//test//java//examples//users//pythonController//
               python3 ReportGeneratorPerf.py
                
                   
        - name: Generate and Upload Gatling Report 
          uses: actions/upload-artifact@v3
          with:
            name: Gatling Report
            path: |
                   IdeaProjects/IdeaProjects/SmartAPIautomationframework/target/gatling/*
